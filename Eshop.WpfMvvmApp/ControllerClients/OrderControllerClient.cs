//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eshop.WpfMvvmApp.ControllerClients {
    
    
    public class OrderControllerClient : CoreWebApiClient.BaseApiControllerClient, IOrderControllerClient {
        
        public OrderControllerClient(string serverUrl, System.Web.Routing.RouteCollection routes) : 
                base(serverUrl, routes) {
        }
        
        public OrderControllerClient(string serverUrl, System.Web.Routing.RouteCollection routes, CoreWebApiClient.IAuthenticationCookiePersister authenticationCookiePersister) : 
                base(serverUrl, routes, authenticationCookiePersister) {
        }
        
        public virtual void PlaceOrder(object notUsed) {
            System.Web.Routing.RouteValueDictionary routeValues = new System.Web.Routing.RouteValueDictionary();
            this.HttpClientPost("PlaceOrder", notUsed, routeValues);
        }
        
        public virtual System.Threading.Tasks.Task PlaceOrderAsync(object notUsed) {
            System.Web.Routing.RouteValueDictionary routeValues = new System.Web.Routing.RouteValueDictionary();
            return this.HttpClientPostAsync("PlaceOrder", notUsed, routeValues);
        }
        
        public virtual Eshop.Dtos.ReviewOrderDto GetReviewOrderDto() {
            System.Web.Routing.RouteValueDictionary routeValues = new System.Web.Routing.RouteValueDictionary();
            return this.HttpClientGet<Eshop.Dtos.ReviewOrderDto>("GetReviewOrderDto", routeValues);
        }
        
        public virtual System.Threading.Tasks.Task<Eshop.Dtos.ReviewOrderDto> GetReviewOrderDtoAsync() {
            System.Web.Routing.RouteValueDictionary routeValues = new System.Web.Routing.RouteValueDictionary();
            return this.HttpClientGetAsync<Eshop.Dtos.ReviewOrderDto>("GetReviewOrderDto", routeValues);
        }
    }
}
