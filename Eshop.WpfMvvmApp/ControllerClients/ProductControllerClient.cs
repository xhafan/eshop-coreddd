//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eshop.WpfMvvmApp.ControllerClients {
    
    
    public class ProductControllerClient : CoreWebApiClient.BaseApiControllerClient, IProductControllerClient {
        
        public ProductControllerClient(string serverUrl, System.Web.Routing.RouteCollection routes) : 
                base(serverUrl, routes) {
        }
        
        public ProductControllerClient(string serverUrl, System.Web.Routing.RouteCollection routes, CoreWebApiClient.IAuthenticationCookiePersister authenticationCookiePersister) : 
                base(serverUrl, routes, authenticationCookiePersister) {
        }
        
        public virtual Eshop.Dtos.ProductSummaryDto[] SearchProducts(string searchedText) {
            System.Web.Routing.RouteValueDictionary routeValues = new System.Web.Routing.RouteValueDictionary();
            routeValues.Add("searchedText", searchedText);
            return this.HttpClientGet<Eshop.Dtos.ProductSummaryDto[]>("SearchProducts", routeValues);
        }
        
        public virtual System.Threading.Tasks.Task<Eshop.Dtos.ProductSummaryDto[]> SearchProductsAsync(string searchedText) {
            System.Web.Routing.RouteValueDictionary routeValues = new System.Web.Routing.RouteValueDictionary();
            routeValues.Add("searchedText", searchedText);
            return this.HttpClientGetAsync<Eshop.Dtos.ProductSummaryDto[]>("SearchProducts", routeValues);
        }
        
        public virtual Eshop.Dtos.ProductDto GetProduct(int productId) {
            System.Web.Routing.RouteValueDictionary routeValues = new System.Web.Routing.RouteValueDictionary();
            routeValues.Add("productId", productId);
            return this.HttpClientGet<Eshop.Dtos.ProductDto>("GetProduct", routeValues);
        }
        
        public virtual System.Threading.Tasks.Task<Eshop.Dtos.ProductDto> GetProductAsync(int productId) {
            System.Web.Routing.RouteValueDictionary routeValues = new System.Web.Routing.RouteValueDictionary();
            routeValues.Add("productId", productId);
            return this.HttpClientGetAsync<Eshop.Dtos.ProductDto>("GetProduct", routeValues);
        }
    }
}
